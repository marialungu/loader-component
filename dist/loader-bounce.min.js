(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react')) :
	typeof define === 'function' && define.amd ? define(['react'], factory) :
	(global = global || self, global['loader-bounce'] = factory(global.React));
}(this, (function (React) { 'use strict';

	React = React && Object.prototype.hasOwnProperty.call(React, 'default') ? React['default'] : React;

	function createCommonjsModule(fn, module) {
		return module = { exports: {} }, fn(module, module.exports), module.exports;
	}

	var classnames = createCommonjsModule(function (module) {
	/*!
	  Copyright (c) 2017 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */

	(function () {

		var hasOwn = {}.hasOwnProperty;

		function classNames () {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg) && arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if ( module.exports) {
			classNames.default = classNames;
			module.exports = classNames;
		} else {
			window.classNames = classNames;
		}
	}());
	});

	function styleInject(css, ref) {
	  if ( ref === void 0 ) ref = {};
	  var insertAt = ref.insertAt;

	  if (!css || typeof document === 'undefined') { return; }

	  var head = document.head || document.getElementsByTagName('head')[0];
	  var style = document.createElement('style');
	  style.type = 'text/css';

	  if (insertAt === 'top') {
	    if (head.firstChild) {
	      head.insertBefore(style, head.firstChild);
	    } else {
	      head.appendChild(style);
	    }
	  } else {
	    head.appendChild(style);
	  }

	  if (style.styleSheet) {
	    style.styleSheet.cssText = css;
	  } else {
	    style.appendChild(document.createTextNode(css));
	  }
	}

	var css_248z = "\n    .loaders_loaderPulse__1vxH2 {\n        border-radius: 100%;\n        margin: auto;\n        -webkit-animation: loaders_loader-scaleout__1v_z_ 1.0s infinite ease-in-out;\n        animation: loaders_loader-scaleout__1v_z_ 1.0s infinite ease-in-out;\n    }\n\n    @-webkit-keyframes loaders_loader-scaleout__1v_z_ {\n        0% { -webkit-transform: scale(0.0) }\n        100% {\n            -webkit-transform: scale(1.0);\n            opacity: 0;\n        }\n    }\n\n    @keyframes loaders_loader-scaleout__1v_z_ {\n        0% {\n            transform: scale(0.0);\n            -webkit-transform: scale(0.0);\n        } 100% {\n              transform: scale(1.0);\n              -webkit-transform: scale(1.0);\n              opacity: 0;\n          }\n    }\n";
	var styles = {"loaderPulse":"loaders_loaderPulse__1vxH2","loader-scaleout":"loaders_loader-scaleout__1v_z_"};
	styleInject(css_248z);

	var Loader = function Loader(_ref) {
	  var height = _ref.height,
	      width = _ref.width,
	      color = _ref.color;
	  var loaderColor = color || '#66064A';
	  var loaderHeight = height || '50px';
	  var loaderWidth = width || '50px';
	  var loaderStyle = {
	    width: loaderWidth,
	    height: loaderHeight,
	    backgroundColor: loaderColor
	  };
	  return /*#__PURE__*/React.createElement("div", {
	    className: classnames(styles.loaderPulse),
	    style: loaderStyle
	  });
	};

	return Loader;

})));
//# sourceMappingURL=loader-bounce.min.js.map
